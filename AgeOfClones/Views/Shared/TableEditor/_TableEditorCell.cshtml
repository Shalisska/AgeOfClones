@using AgeOfClones.Areas.Management.Models

@model TableEditorCellModel

@{
    var value = string.IsNullOrEmpty(Model.Value) ? "0" : Model.Value;
    var selectItems = Model.SelectList;
 }

    @if (Model.IsEditable)
    {
        switch (Model.ControlType)
        {
            @*case ControlType.Hidden:
                @value
                <input type="hidden" id="@Model.PropertyName" name="@Model.PropertyName" value="@value">
                break;*@
            case ControlType.Select:
                if (Model.SelectList != null && Model.SelectList.Count() > 0)
                {
                    <select id="@Model.PropertyName" name="@Model.PropertyName">
                        @foreach (SelectListItem item in Model.SelectList)
                        {
                            if (item.Selected)
                            {
                                <option selected="selected" value="@item.Value">@item.Text</option>
                            }
                            else
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        }
                    </select>
                }
                break;
            default:
                <input type="text" id="@Model.PropertyName" name="@Model.PropertyName" value="@Model.Value" @Html.Raw(GetValidationAttributes(Model.ValidationAttributes)) />
                break;
        }
        if (Model.ControlType != ControlType.Hidden)
        {
            <span class="field-validation-valid" data-valmsg-for="@Model.PropertyName" data-valmsg-replace="true"></span>
        }
    }
    else
    {
        @value
        <input type="hidden" id="@Model.PropertyName" name="@Model.PropertyName" value="@value">
    }


@functions{
    public string GetValidationAttributes(IDictionary<string, string> ValidationAttributes)
    {
        var result = string.Empty;

        if (ValidationAttributes != null && ValidationAttributes.Count > 0)
        {
            result += $"data-val=\"true\" ";
            foreach (var pair in ValidationAttributes)
                result += $"data-val-{pair.Key}=\"{pair.Value}\" ";
        }

        return result;
    }
}